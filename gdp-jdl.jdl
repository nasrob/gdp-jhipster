
entity Country {
    code String required maxlength(3),
    name String required maxlength(52),
    continent Continent required,
    region String required maxlength(26),
    surfaceArea Float required,
    population Integer required,
    lifeExpectancy Float,
    localName String required maxlength(45),
    governmentForm String required maxlength(45)
}

entity City {
	name String required maxlength(35),
    district String required maxlength(20),
    population Integer required
}

entity CountryLanguage {
	language String required,
    isOfficial TrueFalse required,
    percentage Float required
}

enum Continent {
	ASIA, EUROPE, NORTH_AMERICA, AFRICA, OCEANIA,
    ANTARCTICA, SOUTH_AMERICA
}

enum TrueFalse {
	T, F
}

// defining multiple one-to-many relationships
relationship OneToMany {
	Country{city} to City{country(name) required},
    Country{countryLanguage} to CountryLanguage{country(name) required}
}

// Set Pagination options
paginate Country, City, CountryLanguage with pagination

// Use DTOs
dto * with mapstruct

// In case if DTO is not required for specific (comma separated)entities.
// dto * with mapstruct except School

// Set service options to all except few
service all with serviceImpl

// In case if service layer is not required for certain
// (comma separated) entities. Just uncomment below line
// service all with serviceImpl except School

filter Country




